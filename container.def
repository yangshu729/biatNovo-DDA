Bootstrap: docker
# Define the base image to inherit from.
# (e.g. image with a particular python version
# or a particular pytorch/tensorflow version).
From: pytorch/pytorch:2.1.2-cuda12.1-cudnn8-devel

# Define system variables to provide GPU access within the container.
%environment
    export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH

%files
    # Copy algorithm-related files to a separate dir /algo.
    # Don't change the dir name.
    algorithms/biatNovo-DDA /algo
    algorithms/base /algo/base

%post
	# [Optional] Install system packages
	# (e.g. some base images may need git installation)

    # [Optional] Download algorithm-related files
    # (source codes, weights, etc.)
    # All files must be placed within /algo dir.

    # [Optional] Install dependencies
    # (pandas is recommended to support parsing dataset tags)
    pip install --no-cache-dir pandas
    # install or build from source the algorithm, etc.
    pip install Cython==3.0.11
    pip install numpy==2.1.1 pandas==2.2.2
    pip install pyteomics==4.6.3 six==1.16.0
    # pip install torch==2.1.2

    cd /algo
    git clone git@github.com:yangshu729/biatNovo-DDA.git

    cd biatNovo-DDA/DataProcess
    python deepnovo_cython_setup.py build && python deepnovo_cython_setup.py install
    # cd ../ && python Biatnovo/DataProcessing/deepnovo_worker_test.py
    cp /algo/biatNovo-DDA/DataProcess/build/lib.linux-x86_64-cpython-310/DataProcess/deepnovo_cython_modules.cpython-310-x86_64-linux-gnu.so ./

    # Download model weights
    curl ...

%post
	# Make sure make_predictions.sh file is executable.
    chmod +x /algo/make_predictions.sh

# Run algorithm and convert outputs.
# Data is expected to be mounted into /algo/data dir.
%runscript
    cd /algo && ./make_predictions.sh data